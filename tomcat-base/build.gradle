println 'applying plugins to tomcat-base'
apply plugin: 'eu.xenit.docker'
apply plugin: 'eu.xenit.docker-compose'
apply plugin: 'eu.xenit.docker-alfresco'
apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.apache.tomcat.embed:tomcat-embed-core:8.5.78"
    compileOnly "org.apache.tomcat.embed:tomcat-embed-jasper:8.5.78"
    compileOnly "org.apache.tomcat:tomcat-jasper:8.5.78"
    compileOnly "org.apache.tomcat:tomcat-jasper-el:8.5.78"
    compileOnly "org.apache.tomcat:tomcat-jsp-api:8.5.78"
    compileOnly group: 'biz.paluch.logging', name: 'logstash-gelf', version: '1.15.0'
    compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
}

subprojects {
    println 'applying plugins to tomcat subproject'
    apply plugin: 'eu.xenit.docker'
    apply plugin: 'eu.xenit.docker-compose'
    apply plugin: 'eu.xenit.docker-alfresco'
    apply plugin: 'java'
    if (new File("${project.projectDir}/overload.gradle").exists()) {
        apply from: "${project.projectDir}/overload.gradle"
    }

    def tomcatVersion = project.tomcat.version

    configurations {
        sharedLibs
    }

    dependencies {
        implementation "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
        implementation "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
        implementation "org.apache.tomcat:tomcat-jasper:${tomcatVersion}"
        implementation "org.apache.tomcat:tomcat-jasper-el:${tomcatVersion}"
        implementation "org.apache.tomcat:tomcat-jsp-api:${tomcatVersion}"
        implementation group: 'biz.paluch.logging', name: 'logstash-gelf', version: '1.15.0'
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

        sharedLibs(group: 'biz.paluch.logging', name: 'logstash-gelf', version: '1.15.0') {
            transitive = false
        }

        runtimeOnly(group: 'org.postgresql', name: 'postgresql', version: '42.2.19')
    }

    sourceSets {
        main {
            java {
                srcDir file("$project.parent.projectDir/src/main/java")
            }
        }
    }

    archivesBaseName = 'xenit-tomcat-embedded'

    dockerBuild {
        repositories = ['docker.io/xenit/tomcat']
        tags = [tomcatVersion]
    }

    task copySharedLib(type: Sync) {
        from(configurations.sharedLibs)
        into("$buildDir/sharedLibs")
    }

    createDockerFile.dependsOn(copySharedLib)

    createDockerFile {
        baseImage = 'docker.io/eclipse-temurin:11'
        smartCopy copySharedLib.outputs.getFiles().singleFile, '/loglibrarydir'
        smartCopy "${project.parent.projectDir}/src/main/keystore", '/keystore'
        smartCopy configurations.runtimeClasspath, '/app/tomcat-embedded/lib'
        smartCopy configurations.archives.artifacts.files, '/app/tomcat-embedded'

        def buildDate = project.properties.getOrDefault("buildDate", (new Date().getTime() / 1000).toString());
        environmentVariable('BUILD_DATE', buildDate)

        entryPoint('java', '-cp', "/app/tomcat-embedded/${archivesBaseName}.jar:/app/tomcat-embedded/lib/*", 'eu.xenit.alfresco.tomcat.embedded.Main')
    }
}