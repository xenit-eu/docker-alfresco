evaluationDependsOn(':tomcat-base')

Property getBaseImage(Project p) {
    if (p.alfresco.version.major < 6) {
        return "docker.io/xenit/tomcat:alfresco-${p.alfresco.version.major}.${p.alfresco.version.minor}-ubuntu"
    }

    String projectName
    switch (p.alfresco.version.major) {
        case 6:
            println 'using tomcat 8.5 image'
            projectName = ':tomcat-base:tomcat-8.5'
            break
        case 7:
            println 'using tomcat 9 image'
            projectName = ':tomcat-base:tomcat-9'
            break
        default:
            println 'returning null WTF'
            return null
    }

    println "projectName: ${projectName}"
    var tomcatProject = project(projectName)
    var buildDockerImageTask = tomcatProject.getTasks().getByName('buildDockerImage')
    var imageId = buildDockerImageTask.getImageId()
    println "imageId: ${imageId}"
    return imageId
}

String getTomcatProject(Project p) {
    println "p.alfresco.version.major: ${p.alfresco.version.major}"
    if (p.alfresco.version.major == 6) {
        println 'tomcat-8.5'
        return ":tomcat-base:tomcat-8.5"
    }

    if (p.alfresco.version.major == 7) {
        println 'tomcat-9'
        return ":tomcat-base:tomcat-9"
    }

    //println 'docker.io/xenit/tomcat:8-bionic'
    return null
}

subprojects {
    apply plugin: 'eu.xenit.docker'
    apply plugin: 'eu.xenit.docker-alfresco'
    apply plugin: 'eu.xenit.docker-compose'

    if (new File("${project.projectDir}/overload.gradle").exists())
        apply from: "${project.projectDir}/overload.gradle"

    def workingDir = "$project.buildDir/dockerbuild"

    configurations {
        initScript
    }

    dependencies {
        initScript project(':docker-init-script')
    }

    task copyDockerResources(type: Sync) {
        from "$rootProject.projectDir/src/main/resources/global"
        from("$rootProject.projectDir/src/main/resources/dockerfiles/") {
            if(project.alfresco.version.major.toInteger() > 6) {
                include "Dockerfile-skeleton-7"
                rename "Dockerfile-skeleton-7", 'Dockerfile'
            }
            else if (project.alfresco.version.major.toInteger() == 6) {
                include "Dockerfile-skeleton-6"
                rename "Dockerfile-skeleton-6", 'Dockerfile'
            } else {
                include "Dockerfile-skeleton-pre6"
                rename "Dockerfile-skeleton-pre6", 'Dockerfile'
            }
        }
        from "$project.projectDir/local"
        from(configurations.initScript) {
            rename { "90-init-alfresco.jar" }
        }
        into workingDir
    }

//    createDockerFile {
//        var tomcatProjectName = getTomcatProject(project)
//        var tomcatBaseImage = "docker.io/xenit/tomcat:alfresco-${project.alfresco.version.major}.${project.alfresco.version.minor}-ubuntu"
//        if (tomcatProjectName != null) {
//            var tomcatProject = project(getTomcatProject(project))
//            var buildDockerImageTask = tomcatProject.getTasks().getByName('buildDockerImage')
//            tomcatBaseImage = buildDockerImageTask.getImageId()
//        }
//
//        println "tomcatBaseImage: ${tomcatBaseImage}"
//        baseImage = tomcatBaseImage
//        //baseImage = "docker.io/xenit/tomcat:alfresco-${project.alfresco.version.major}.${project.alfresco.version.minor}-ubuntu"
//    }

    def tomcatProject = project(":tomcat-base:tomcat-9")
    def tomcatImage = tomcatProject.getTasks().getByName('buildDockerImage')
    println "tomcatImage: ${tomcatImage.getImageId()}"

    dockerBuild {
        repositories = [calcRepository(project.alfresco.flavor)]
        tags = calcTags(project.alfresco.version)
        alfresco {
            baseImage = tomcatImage.getImageId()
        }
    }

    createDockerFile.dependsOn(tomcatImage)

    buildDockerImage {
        pull = false
    }

//    dockerBuild {
////        var tomcatProjectName = getTomcatProject(project)
////        var tomcatBaseImage = "docker.io/xenit/tomcat:alfresco-${project.alfresco.version.major}.${project.alfresco.version.minor}-ubuntu"
////        if (tomcatProjectName != null) {
////            var tomcatProject = project(getTomcatProject(project))
////            var buildDockerImageTask = tomcatProject.getTasks().getByName('buildDockerImage')
////            tomcatBaseImage = buildDockerImage.getImageId()
////        }
//
//        repositories = [calcRepository(project.alfresco.flavor)]
//        tags = calcTags(project.alfresco.version)
////        alfresco {
////            baseImage = tomcatBaseImage
////        }
//    }
//
////    buildDockerImage {
////        var tomcatProjectName = getTomcatProject(project)
////        if (tomcatProjectName != null) {
////            dependsOn("${tomcatProjectName}:buildDockerImage")
////        }
////    }
}
