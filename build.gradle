plugins {
    id "eu.xenit.docker-alfresco" version "5.3.2" apply false
    id "be.vbgn.ci-detect" version "0.5.0"
    id "org.sonarqube" version "3.4.0.2513"
}

sonarqube {
    properties {
        properties["sonar.projectKey"] = "xenit-eu_docker-alfresco"
        properties["sonar.organization"] = "xenit-eu"
        properties["sonar.host.url"] = "https://sonarcloud.io"
        properties["sonar.language"] = "java"
        if (ci.isPullRequest()) {
            properties["sonar.pullrequest.key"] = ci.pullRequest
            properties["sonar.pullrequest.branch"] = ci.branch
            properties["sonar.pullrequest.base"] = ci.pullRequestTargetBranch
        } else {
            // GIT_BRANCH allows to push from local development directly to SonarCloud
            properties["sonar.branch.name"] = ci.reference != null ? ci.reference : "$System.env.GIT_BRANCH"
        }
    }
}

import java.util.stream.Collectors

def copyPropertyValueIfExists(sourcePropertyName, targetPropertyName) {
    if (project.hasProperty(sourcePropertyName)) {
        project.ext[targetPropertyName] = project.property(sourcePropertyName)
    }
}

copyPropertyValueIfExists('alfresco_nexus_username', 'org.alfresco.maven.nexus.username')
copyPropertyValueIfExists('alfresco_nexus_password', 'org.alfresco.maven.nexus.password')


def calcTags(version) {
    def tags = [
            "${version.major}.${version.minor}.${version.rev}".toString(),
            "${version.major}.${version.minor}".toString()
    ]

    if (version.label) {
        tags += "${version.major}.${version.minor}.${version.rev}.${version.label}".toString()
    }
    // For non-master/non-release builds, change the tags to contain branch and build number
    def isTestBuild = ci.isCi() && ci.branch != "master" && ci.branch != "release"
    if (isTestBuild) {
        tags = tags.stream().map({ it + "-build-${ci.branch}-${ci.buildNumber}" }).collect(Collectors.toList());
    }

    return tags
}

def calcRepository(flavor, isAlfresco) {
    def repoName = flavor == "enterprise" ? "private.docker.xenit.eu/alfresco-enterprise" : "docker.io/xenit"
    if (isAlfresco) {
        return "${repoName}/alfresco-repository-${flavor}";
    }
    return "${repoName}/alfresco-share-${flavor}";

}


String getTomcatProject(majorVersion) {
    println "major version used : ${majorVersion}"
    if (majorVersion == 6) {
        println 'tomcat-embedded-8.5'
        return ":tomcat-base:tomcat-embedded-8.5"
    }

    if (majorVersion == 7) {
        println 'tomcat-embedded-9'
        return ":tomcat-base:tomcat-embedded-9"
    }

    return null
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven {
            url 'https://artifacts.alfresco.com/nexus/content/repositories/public/'
        }
        // This private repository provides Xenit with Alfresco enterprise artefacts.
        // External developers should replace it with their own library repository.
        maven {
            url 'https://artifacts.alfresco.com/nexus/content/groups/private'
            credentials {
                username project.property('org.alfresco.maven.nexus.username')
                password project.property('org.alfresco.maven.nexus.password')
            }
        }
    }

    pluginManager.withPlugin('eu.xenit.docker-config') {
        docker {
            if (System.getenv("DOCKER_USER") != null) {
                registryCredentials {
                    username = System.getenv("DOCKER_USER")
                    password = System.getenv("DOCKER_PASSWORD")
                }
            } else {
                logger.debug "using default credentials"
            }
        }
    }
}
